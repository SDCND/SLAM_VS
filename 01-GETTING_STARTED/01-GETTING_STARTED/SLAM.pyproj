<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="4.0">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>bfb3bd32-f7b0-422d-9b4a-80fd702bf8f9</ProjectGuid>
    <ProjectHome>
    </ProjectHome>
    <StartupFile>logfile_viewer.py</StartupFile>
    <SearchPath>
    </SearchPath>
    <WorkingDirectory>.</WorkingDirectory>
    <OutputPath>.</OutputPath>
    <Name>SLAM</Name>
    <RootNamespace>01-GETTING_STARTED</RootNamespace>
    <InterpreterId>Global|ContinuumAnalytics|Anaconda35-64</InterpreterId>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>true</DebugSymbols>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="distribution.py" />
    <Compile Include="leer.py">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="lego_robot.py" />
    <Compile Include="logfile_viewer.py" />
    <Compile Include="logfile_viewer_old.py" />
    <Compile Include="slam_01_a_plot_motor_ticks.py" />
    <Compile Include="slam_01_b_print_motor_increments.py" />
    <Compile Include="slam_02_a_filter_motor_question.py" />
    <Compile Include="slam_02_b_filter_motor_file_question.py" />
    <Compile Include="slam_03_a_plot_scan.py" />
    <Compile Include="slam_03_b_scan_derivative_question.py" />
    <Compile Include="slam_03_c_find_cylinders_question.py" />
    <Compile Include="slam_03_d_find_cylinders_cartesian_question.py" />
    <Compile Include="slam_04_a_project_landmarks.py" />
    <Compile Include="slam_04_b_find_cylinder_pairs_question.py" />
    <Compile Include="slam_04_c_estimate_transform_question.py" />
    <Compile Include="slam_04_d_apply_transform_question.py" />
    <Compile Include="slam_05_a_find_wall_pairs_question.py" />
    <Compile Include="slam_05_b_estimate_wall_transform.py" />
    <Compile Include="slam_05_c_icp_wall_transform_question.py" />
    <Compile Include="slam_06_a_move_distribution_question.py" />
    <Compile Include="slam_06_b_convolve_distribution_question.py" />
    <Compile Include="slam_06_c_multiply_distribution_question.py" />
    <Compile Include="slam_06_d_histogram_filter.py" />
    <Compile Include="slam_06_e_histogram_filter_cleanedup.py" />
    <Compile Include="slam_06_f_kalman_vs_histogram_filter_question.py" />
    <Compile Include="slam_07_a_extended_kalman_filter_class.py" />
    <Compile Include="slam_07_b_state_derivative_question.py" />
    <Compile Include="slam_07_c_control_derivative_question.py" />
    <Compile Include="slam_07_d_kalman_predict_question.py" />
    <Compile Include="slam_07_e_measurement_derivative_question.py" />
    <Compile Include="slam_07_f_kalman_filter_question.py" />
    <Compile Include="slam_08_a_particle_prediction_question.py" />
    <Compile Include="slam_08_b_particle_correction_question.py" />
    <Compile Include="slam_08_c_density_estimation_question.py" />
    <Compile Include="slam_08_d_density_error_ellipse.py" />
    <Compile Include="slam_09_a_slam_prediction_question.py" />
    <Compile Include="slam_09_b_slam_add_landmark_question.py" />
    <Compile Include="slam_09_c_slam_correction_question.py" />
    <Compile Include="slam_09_c_slam_correction_question_2.py" />
    <Compile Include="slam_10_a_prediction.py" />
    <Compile Include="slam_10_b_correspondence_likelihood_question.py" />
    <Compile Include="slam_10_c_new_landmark_question.py" />
    <Compile Include="slam_10_d_update_landmark_question.py" />
    <Compile Include="slam_10_e_correction_question.py" />
    <Compile Include="slam_10_f_counter_question.py" />
    <Compile Include="slam_d_library.py" />
    <Compile Include="slam_e_library.py" />
    <Compile Include="slam_f_library.py" />
    <Compile Include="slam_g_library.py" />
  </ItemGroup>
  <ItemGroup>
    <InterpreterReference Include="Global|ContinuumAnalytics|Anaconda35-64" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="robot4_motors.txt" />
  </ItemGroup>
  <Import Project="$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)\Python Tools\Microsoft.PythonTools.targets" />
  <!-- Uncomment the CoreCompile target to enable the Build command in
       Visual Studio and specify your pre- and post-build commands in
       the BeforeBuild and AfterBuild targets below. -->
  <!--<Target Name="CoreCompile" />-->
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
</Project>